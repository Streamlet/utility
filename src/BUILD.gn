source_set("string") {
  sources = [
    "encoding.h",
    "native_string.h",
    "string.h",
  ]

  if (is_win) {
    sources += [ "encoding_win.cc" ]
  } else {
    sources += [ "encoding_posix.cc" ]
  }

  cflags = []
  if (is_posix) {
    cflags += [ "-Wno-unused-result" ]
  }

  deps = [ "../thirdparty:loki" ]
}

source_set("crypto") {
  sources = [
    "crypto.cc",
    "crypto.h",
  ]

  cflags = []
  if (is_posix) {
    cflags += [ "-Wno-unused-result" ]
  }

  deps = [
    "../thirdparty:loki",
    "../thirdparty:openssl_crypto",
  ]
}

source_set("file") {
  sources = [
    "byte_order.h",
    "file.cc",
    "file.h",
  ]

  cflags = []
  if (is_posix) {
    cflags += [ "-Wno-unused-result" ]
  }

  deps = [ "../thirdparty:loki" ]
}

source_set("log") {
  sources = [
    "log.cc",
    "log.h",
    "log_init.h",
  ]

  cflags = []
  if (is_posix) {
    cflags += [ "-Wno-unused-result" ]
  }

  deps = [ "../thirdparty:loki" ]
}

source_set("process") {
  sources = [
    "cmdline_options.cc",
    "cmdline_options.h",
    "process.h",
  ]

  if (is_win) {
    sources += [ "process_win.cc" ]
  } else {
    sources += [ "process_posix.cc" ]
  }

  cflags = []
  if (is_posix) {
    cflags += [ "-Wno-unused-result" ]
  }

  deps = [ "../thirdparty:loki" ]
}

group("src") {
  deps = [
    ":crypto",
    ":file",
    ":log",
    ":process",
    ":string",
  ]
}

executable("unittest") {
  testonly = true
  if (is_win) {
    configs += [ "../build/config/win:console_subsystem" ]
  }
  sources = [
    "cmdline_options_test.cc",
    "crypto_test.cc",
    "encoding_test.cc",
    "file_test.cc",
    "string_test.cc",
    "unittest.cc",
  ]
  deps = [
    ":cmdline_options_echo",
    ":crypto",
    ":file",
    ":process",
    ":process_test",
    ":string",
    "../thirdparty:googletest",
    "../thirdparty:loki",
  ]
  if (is_win) {
    deps += [ ":cmdline_options_echo_win" ]
  }
}

executable("process_test") {
  testonly = true
  if (is_win) {
    configs += [ "../build/config/win:console_subsystem" ]
  }
  sources = [ "process_test.cc" ]
  deps = [ ":process" ]
}

executable("cmdline_options_echo") {
  testonly = true
  if (is_win) {
    configs += [ "../build/config/win:console_subsystem" ]
  }
  sources = [ "cmdline_options_echo.cc" ]
  deps = [ ":process" ]
}

if (is_win) {
  executable("cmdline_options_echo_win") {
    testonly = true
    configs += [ "../build/config/win:windows_subsystem" ]
    sources = [ "cmdline_options_echo_win.cc" ]
    deps = [ ":process" ]
  }
}
