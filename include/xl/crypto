// MIT License
//
// Copyright (c) 2022 Streamlet (streamlet@outlook.com)
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

#include "native_string"
#include <string>

namespace xl {

namespace crypto {

//
// @brief Calculate MD5 checksum for a buffer.
//
// @param data The buffer address
// @param length The buffer size
// @return Return checksum in lowercase hex string.
//
std::string md5(const void *data, size_t length);

//
// @brief Calculate MD5 checksum for a string.
//
// @param s The string
// @return Return checksum in lowercase hex string.
//
std::string md5(const std::string &s);

//
// @brief Calculate MD5 checksum for a file.
//
// @param file_path The path of file
// @return Return checksum in lowercase hex string.
//
std::string md5_file(const TCHAR *file_path);

//
// @brief Calculate SHA1 checksum for a buffer.
//
// @param data The buffer address
// @param length The buffer size
// @return Return checksum in lowercase hex string.
//
std::string sha1(const void *data, size_t length);

//
// @brief Calculate SHA1 checksum for a string.
//
// @param s The string
// @return Return checksum in lowercase hex string.
//
std::string sha1(const std::string &s);

//
// @brief Calculate SHA1 checksum for a file.
//
// @param file_path The path of file
// @return Return checksum in lowercase hex string.
//
std::string sha1_file(const TCHAR *file_path);

//
// @brief Calculate SHA224 checksum for a buffer.
//
// @param data The buffer address
// @param length The buffer size
// @return Return checksum in lowercase hex string.
//
std::string sha224(const void *data, size_t length);

//
// @brief Calculate SHA224 checksum for a string.
//
// @param s The string
// @return Return checksum in lowercase hex string.
//
std::string sha224(const std::string &s);

//
// @brief Calculate SHA224 checksum for a file.
//
// @param file_path The path of file
// @return Return checksum in lowercase hex string.
//
std::string sha224_file(const TCHAR *file_path);

//
// @brief Calculate SHA256 checksum for a buffer.
//
// @param data The buffer address
// @param length The buffer size
// @return Return checksum in lowercase hex string.
//
std::string sha256(const void *data, size_t length);

//
// @brief Calculate SHA256 checksum for a string.
//
// @param s The string
// @return Return checksum in lowercase hex string.
//
std::string sha256(const std::string &s);

//
// @brief Calculate SHA256 checksum for a file.
//
// @param file_path The path of file
// @return Return checksum in lowercase hex string.
//
std::string sha256_file(const TCHAR *file_path);

//
// @brief Calculate SHA384 checksum for a buffer.
//
// @param data The buffer address
// @param length The buffer size
// @return Return checksum in lowercase hex string.
//
std::string sha384(const void *data, size_t length);

//
// @brief Calculate SHA384 checksum for a string.
//
// @param s The string
// @return Return checksum in lowercase hex string.
//
std::string sha384(const std::string &s);

//
// @brief Calculate SHA384 checksum for a file.
//
// @param file_path The path of file
// @return Return checksum in lowercase hex string.
//
std::string sha384_file(const TCHAR *file_path);

//
// @brief Calculate SHA512 checksum for a buffer.
//
// @param data The buffer address
// @param length The buffer size
// @return Return checksum in lowercase hex string.
//
std::string sha512(const void *data, size_t length);

//
// @brief Calculate SHA512 checksum for a string.
//
// @param s The string
// @return Return checksum in lowercase hex string.
//
std::string sha512(const std::string &s);

//
// @brief Calculate SHA512 checksum for a file.
//
// @param file_path The path of file
// @return Return checksum in lowercase hex string.
//
std::string sha512_file(const TCHAR *file_path);

} // namespace crypto

} // namespace xl
