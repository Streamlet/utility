config("utility_public_config") {
  include_dirs = [ "../include" ]
}

source_set("meta") {
  sources = []

  inputs = [
    "../include/xl/scope_exit",
    "../include/xl/reflect",
  ]

  public_configs = [ ":utility_public_config" ]
}

source_set("string") {
  sources = []
  if (is_win) {
    sources += [ "encoding_win.cc" ]
  } else {
    sources += [ "encoding_posix.cc" ]
  }

  inputs = [
    "../include/xl/encoding",
    "../include/xl/native_string",
    "../include/xl/string",
  ]

  cflags = []
  if (is_posix) {
    cflags += [ "-Wno-unused-result" ]
  }

  public_configs = [ ":utility_public_config" ]
}

source_set("crypto") {
  sources = [ "crypto.cc" ]

  inputs = [ "../include/xl/crypto" ]

  cflags = []
  if (is_posix) {
    cflags += [ "-Wno-unused-result" ]
  }

  deps = [ "../thirdparty:libressl_crypto" ]

  public_configs = [ ":utility_public_config" ]
}

source_set("file") {
  sources = [ "file.cc" ]

  inputs = [
    "../include/xl/byte_order.h",
    "../include/xl/file",
  ]

  cflags = []
  if (is_posix) {
    cflags += [ "-Wno-unused-result" ]
  }

  public_configs = [ ":utility_public_config" ]
}

source_set("config") {
  sources = [ "ini.cc" ]

  inputs = [ "../include/xl/ini" ]

  cflags = []
  if (is_posix) {
    cflags += [ "-Wno-unused-result" ]
  }

  deps = [ ":file" ]

  public_configs = [ ":utility_public_config" ]
}

source_set("log") {
  sources = [ "log.cc" ]

  inputs = [
    "../include/xl/log",
    "../include/xl/log_init",
  ]

  cflags = []
  if (is_posix) {
    cflags += [ "-Wno-unused-result" ]
  }

  public_configs = [ ":utility_public_config" ]
}

source_set("process") {
  sources = [ "cmdline_options.cc" ]

  inputs = [
    "../include/xl/cmdline_options",
    "../include/xl/process",
  ]

  if (is_win) {
    sources += [ "process_win.cc" ]
  } else {
    sources += [ "process_posix.cc" ]
  }

  cflags = []
  if (is_posix) {
    cflags += [ "-Wno-unused-result" ]
  }

  public_configs = [ ":utility_public_config" ]
}

group("src") {
  deps = [
    ":crypto",
    ":file",
    ":log",
    ":meta",
    ":process",
    ":string",
  ]
}
