import("../../build_options.gni")

source_set("utility") {
  defines = []
  sources = [
    "crypto.cc",
    "crypto.h",
    "http_client.cc",
    "http_client.h",
  ]

  if (is_win) {
    sources += [
      "encoding.h",
      "encoding_win.cc",
    ]
  }

  if (is_win && winhttp) {
    sources += [ "http_client_winhttp.cc" ]
  } else {
    sources += [ "http_client_curl.cc" ]
  }

  libs = []
  if (is_win) {
    libs += [ "crypto-51.lib" ]  # for crypto.cc
    if (winhttp) {
      libs += [ "winhttp.lib" ]  # for http_client_winhttp.cc
    } else {
      # for http_client_curl.cc
      if (is_debug) {
        libs += [ "libcurl-d.lib" ]
      } else {
        libs += [ "libcurl.lib" ]
      }
      libs += [
        "normaliz.lib",
        "wldap32.lib",
        "ws2_32.lib",
      ]
    }
  } else {
    libs += [
      "crypto",  # for crypto.cc
      "curl",  # for http_client_curl.cc
    ]
  }

  deps = [
    "../../thirdparty:boost",
    "../../thirdparty:openssl",
  ]
  if (!is_win || !winhttp) {
    deps += [ "../../thirdparty:curl" ]
  }
}

executable("utility_test") {
  testonly = true

  sources = [
    "cmdline_options.cc",
    "cmdline_options.h",
    "cmdline_options_test.cc",
    "crypto_test.cc",
    "unittest.cc",
    "url.cc",
    "url.h",
    "url_test.cc",
  ]
  if (is_win && !winhttp) {
    sources += [
      "encoding.h",
      "encoding_win.cc",
    ]
  }

  deps = [
    ":utility",
    "../../thirdparty:boost",
  ]
}

executable("http_client_test") {
  testonly = true
  sources = [ "http_client_test.cc" ]

  deps = [ ":utility" ]
}

executable("cmdline_options_echo") {
  testonly = true
  sources = [
    "cmdline_options.cc",
    "cmdline_options.h",
    "cmdline_options_echo.cc",
  ]
  if (is_win && !winhttp) {
    sources += [
      "encoding.h",
      "encoding_win.cc",
    ]
  }
  deps = [
    ":utility",
    "../../thirdparty:boost",
  ]
}

if (is_win) {
  executable("cmdline_options_echo_win") {
    testonly = true
    sources = [
      "cmdline_options.cc",
      "cmdline_options.h",
      "cmdline_options_echo_win.cc",
    ]
    if (!winhttp) {
      sources += [
        "encoding.h",
        "encoding_win.cc",
      ]
    }

    deps = [
      ":utility",
      "../../thirdparty:boost",
    ]
  }
}
