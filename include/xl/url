#include <xl/string>

namespace xl {

template <typename CharType>
struct url_parts_t {
  bool valid = false;
  basic_string_ref<CharType> protocol;
  basic_string_ref<CharType> username;
  basic_string_ref<CharType> password;
  basic_string_ref<CharType> domain;
  basic_string_ref<CharType> port;
  basic_string_ref<CharType> full_path; // path with query and fragment
  basic_string_ref<CharType> path;
  basic_string_ref<CharType> query;
  basic_string_ref<CharType> fragment;
};

using url_parts = url_parts_t<char>;
using url_parts_w = url_parts_t<wchar_t>;

namespace url {

url_parts parse(const char *s);
url_parts parse(const char *s, size_t length);
url_parts_w parse(const wchar_t *s);
url_parts_w parse(const wchar_t *s, size_t length);

std::string encode(const std::string &s);
std::string decode(const std::string &s);

} // namespace url

} // namespace xl
