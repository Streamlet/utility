declare_args() {
  winhttp = true
}

source_set("utility") {
  configs += [ "//build_config:project_common" ]
  sources = [
    "http_client.cc",
    "http_client.h",
    "url.cc",
    "url.h",
  ]
  if (is_win) {
    if (winhttp) {
      sources += [
        "encoding.h",
        "encoding_win.cc",
        "http_client_win.cc",
      ]
      libs = [ "winhttp.lib" ]
    } else {
      sources += [ "http_client_posix.cc" ]
      libs = [
        "user32.lib",
        "advapi32.lib",
        "crypt32.lib",
        "libssl.lib",
        "libcrypto.lib",
      ]
    }
  } else {
    sources += [ "http_client_posix.cc" ]
    libs = [
      "ssl",
      "crypto",
    ]
  }
}

executable("utility_test") {
  configs += [ "//build_config:project_common" ]
  if (is_win) {
    configs += [ "//build/config/win:static_runtime" ]
  }

  sources = [
    "test.cc",
    "url_test.cc",
  ]

  deps = [ ":utility" ]

  if (!is_win) {
    libs = [ "boost_unit_test_framework" ]
  }
}

executable("http_cmd") {
  configs += [ "//build_config:project_common" ]
  if (is_win) {
    configs += [ "//build/config/win:static_runtime" ]
  }

  sources = [ "http_cmd.cc" ]

  deps = [ ":utility" ]
}
