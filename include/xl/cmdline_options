// MIT License
//
// Copyright (c) 2022 Streamlet (streamlet@outlook.com)
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

#pragma once

// Boost.ProgramOptions is too large, so implement an easy one here

#include <map>
#include <memory>
#include <sstream>
#include <string>

#ifdef _WIN32
#include <tchar.h>
#else
#define TCHAR char
#endif

namespace xl {

namespace cmdline_options {

struct parsed_options {
  std::map<std::basic_string<TCHAR>, std::basic_string<TCHAR>> parsed_map;

  bool has(const TCHAR *option_name) const {
    return parsed_map.find(option_name) != parsed_map.end();
  }

  std::basic_string<TCHAR> get(const TCHAR *option_name) const {
    auto it = parsed_map.find(option_name);
    return it != parsed_map.end() ? it->second : std::basic_string<TCHAR>();
  }

  template <typename T>
  T get_as(const TCHAR *option_name) const {
    std::basic_stringstream<TCHAR> ss;
    ss << get(option_name);
    T t = {};
    ss >> t;
    return t;
  }
};

parsed_options parse(int argc, const TCHAR *argv[]);

#ifdef _WIN32
parsed_options parse(const TCHAR *cmdline);
#endif

} // namespace cmdline_options

} // namespace xl
