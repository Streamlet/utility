# crypto from libressl
config("libressl_crypto_public_config") {
  include_dirs = [ "libressl/include" ]
  if (is_posix) {
    cflags = [ "-Wno-deprecated-declarations" ]
  }
}

static_library("libressl_crypto") {
  defines = [
    "__BEGIN_HIDDEN_DECLS=",
    "__END_HIDDEN_DECLS=",
  ]

  if (is_win) {
    cflags = [ "/wd5105" ]
  }
  if (is_linux) {
    defines += [ "HAVE_ENDIAN_H" ]
  }
  if (is_mac) {
    defines += [
      "HAVE_STRLCPY",
      "HAVE_STRLCAT",
      "HAVE_MACHINE_ENDIAN_H",
    ]
  }

  sources = [
    "libressl/crypto/md5/md5_dgst.c",
    "libressl/crypto/md5/md5_one.c",
    "libressl/crypto/sha/sha1.c",
    "libressl/crypto/sha/sha256.c",
    "libressl/crypto/sha/sha3.c",
    "libressl/crypto/sha/sha512.c",
  ]
  if (is_win) {
    sources += [ "libressl/crypto/compat/explicit_bzero_win.c" ]
  } else {
    sources += [ "libressl/crypto/compat/explicit_bzero.c" ]
  }

  include_dirs = [
    "libressl/crypto",
    "libressl/include/compat",
  ]

  if (is_win) {
    libs = [ "ws2_32.lib" ]
  }

  public_configs = [ ":libressl_crypto_public_config" ]
}

# googletest

config("googletest_public_config") {
  include_dirs = [ "googletest/googletest/include" ]
}

static_library("googletest") {
  sources = [ "googletest/googletest/src/gtest-all.cc" ]
  include_dirs = [ "googletest/googletest" ]
  public_configs = [ ":googletest_public_config" ]
}
